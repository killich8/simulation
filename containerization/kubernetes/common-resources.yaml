apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-config
  namespace: road-object-detection
data:
  region: "${AWS_REGION}"
  raw_data_bucket: "${S3_RAW_DATA_BUCKET}"
  processed_data_bucket: "${S3_PROCESSED_DATA_BUCKET}"
  model_artifacts_bucket: "${S3_MODEL_ARTIFACTS_BUCKET}"
  logs_bucket: "${S3_LOGS_BUCKET}"
---
apiVersion: v1
kind: Namespace
metadata:
  name: road-object-detection
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: efs-sc
provisioner: efs.csi.aws.com
parameters:
  provisioningMode: efs-ap
  fileSystemId: ${EFS_FILESYSTEM_ID}
  directoryPerms: "700"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: road-object-detection-sa
  namespace: road-object-detection
  annotations:
    eks.amazonaws.com/role-arn: "${IAM_ROLE_ARN}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: road-object-detection-role
  namespace: road-object-detection
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets", "persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: road-object-detection-rolebinding
  namespace: road-object-detection
subjects:
- kind: ServiceAccount
  name: road-object-detection-sa
  namespace: road-object-detection
roleRef:
  kind: Role
  name: road-object-detection-role
  apiGroup: rbac.authorization.k8s.io
